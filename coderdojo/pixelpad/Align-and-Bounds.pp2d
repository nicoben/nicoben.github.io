{"assets":{"script":[{"Game":{"type":"game script","start":"set_room('Menu')\n","loop":""}},{"Treasure":{"type":"object script","start":"self.sprite = new_sprite('treasure.png')\n","loop":""}}],"room":[{"Menu":{"type":"room script","start":"msg = '''\nPlease press:\n1 - Sprite demo\n2 - Text demo\n'''\n\nt = new_text(msg, 0, 0)\nt.color = 'white'\nt.fontSize = 30\nt.halign = 'center'\nt.valign = 'middle'\n","loop":"if key_was_pressed('1'):\n    set_room('SpriteView')\nelif key_was_pressed('2'):\n    set_room('TextView')\n    "}},{"TextView":{"type":"room script","start":"angle = 30\n\ndef test(x, y, angle, halign, valign):\n    obj = new_text(f'This text is\\n{halign} aligned and\\n{valign} aligned', x, y)\n    obj.color = 'white'\n    obj.angle = angle\n    obj.halign = halign\n    obj.valign = valign\n    obj.fontSize = 20\n    draw_box(obj)\n\nfor x in (-500, 0, 500):\n    drawLine(x, -360, x, 360)\n\nfor y in (-200, 0, 200):\n    drawLine(-640, y, 640, y)\n\ntest(-500, 200, angle, \"left\", \"top\")\ntest(0, 200, angle, \"center\", \"top\")\ntest(500, 200, angle, \"right\", \"top\")\ntest(-500, 0, angle, \"left\", \"middle\")\ntest(0, 0, angle, \"center\", \"middle\")\ntest(500, 0, angle, \"right\", \"middle\")\ntest(-500, -200, angle, \"left\", \"bottom\")\ntest(0, -200, angle, \"center\", \"bottom\")\ntest(500, -200, angle, \"right\", \"bottom\")\n","loop":"# This is commented out until I can figure how to clear all the lines drawn with drawLine when changing room.\n\n# if key_was_pressed(' ') or mouse_was_pressed('left'):\n#     set_room('SpriteView')\n    "}},{"SpriteView":{"type":"room script","start":"angle = 30\n\ndef test(x, y, angle, halign, valign):\n    obj = Treasure()\n    obj.x = x\n    obj.y = y\n    obj.align = halign\n    obj.halign = halign\n    obj.valign = valign\n    obj.angle = angle\n    draw_box(obj)\n\nfor x in (-500, 0, 500):\n    drawLine(x, -360, x, 360)\n\nfor y in (-200, 0, 200):\n    drawLine(-640, y, 640, y)\n\ntest(-500, 200, angle, \"left\", \"top\")\ntest(0, 200, angle, \"center\", \"top\")\ntest(500, 200, angle, \"right\", \"top\")\ntest(-500, 0, angle, \"left\", \"middle\")\ntest(0, 0, angle, \"center\", \"middle\")\ntest(500, 0, angle, \"right\", \"middle\")\ntest(-500, -200, angle, \"left\", \"bottom\")\ntest(0, -200, angle, \"center\", \"bottom\")\ntest(500, -200, angle, \"right\", \"bottom\")\n","loop":"# This is commented out until I can figure how to clear all the lines drawn with drawLine when changing room.\n\n# if key_was_pressed(' ') or mouse_was_pressed('left'):\n#     set_room('TextView')\n    "}}],"texture":[{"treasure.png":{"type":"image","uri":"https://s3.us-west-1.amazonaws.com/media.pixelpad.io/__ASSET__.33310.669041.1664204712.treasure.png"}}],"sound":[],"function":[{"draw_box.py":{"type":"function script","head":"def draw_box(obj):\n    bounds = get_bounds(obj)\n\n    corners = ['topLeft', 'topRight', 'bottomRight', 'bottomLeft'] # must be (counter-)clockwise\n    sides = zip(corners, corners[1:] + [corners[0]])\n\n    for a, b in sides:\n        drawLine(bounds[a]['x'], bounds[a]['y'], bounds[b]['x'], bounds[b]['y'])\n"}}]}}